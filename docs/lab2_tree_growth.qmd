---
title: "Lab 2: Minnesota Tree Growth Analysis"
author: "Kiara Gleiser"
date: "2025-02-18"
format: html
editor: visual
---

## Introduction
This lab explores data manipulation with dplyr using a long-term tree growth observation record from Minnesota. The dataset comes from the paper "Variable effects of climate on forest growth in relation to climate extremes, disturbance, and forest dynamics."

# Set up
```{r setup}
library(tidyverse)
library(dplyr)

# Read the data
trees <- read.csv("/Users/kiaragleiser/ESS330/git/Lab 2/data/tree_dat.csv")
```

## Question 1: Dataset Overview
```{r}
glimpse(trees)
```

The dataset contains tree growth measurements with the following structure:
[Add your description here]

## Question 2: Stand 1 Records

```{r}
trees |>
  filter(stand == "1") |>
  nrow()
```

## Question 3: Species Records

```{r}
trees |>
  filter(species %in% c("ABBA", "PIST")) |>
  count(species)
```

## Question 4: Old Trees

```{r}
max_year <- max(trees$year)
trees |>
  filter(year == max_year, age > 200) |>
  nrow()
```

## Question 5: Oldest tree in the dataset using `slice_max`.
```{r}
oldest_tree <- trees %>%
    slice_max(order_by = age, n = 1)

oldest_tree
```

## Question 6: Find the oldest 5 trees recorded in 2001.
```{r}
oldest_2001 <- trees %>%
  filter(year == 2001) %>%
  slice_max(order_by = age, n = 5)

oldest_2001
```

## Question 7: Random 30% sample in 2002.
```{r}
sample_2002 <- trees %>%
  filter(year == 2002) %>%
  slice_sample(prop = 0.3)

nrow(sample_2002) # Count of trees in the 30% sample
```

## Question 8: Top 3 trees in stand 5 (2007) by descending `rad_ib`.
```{r}
top_stand5 <- trees %>%
  filter(year == 2007, stand == "5") %>%
  arrange(desc(rad_ib)) %>%
  slice_head(n = 3)

top_stand5
```

## Question 9: Reduce dataset and find the smallest trees in stand 3 (2007).
```{r}
smallest_stand3 <- trees %>%
  select(treeID, stand, year, rad_ib) %>%
  filter(stand == "3", year == 2007) %>%
  slice_min(order_by = rad_ib, n = 3)

smallest_stand3
```

## Question 10: Remove the `stand` column and use `glimpse`.
```{r}
trees_no_stand <- trees %>%
  select(-stand)

glimpse(trees_no_stand)
```

## Question 11: Select all columns containing "ID".
```{r}
id_columns <- trees %>%
  select(matches("ID"))

head(id_columns)
```

## Question 12: Select columns with `"ID"` or `"stand"` in their names.
```{r}
selected_columns <- trees %>%
  select(matches("ID|stand"))

glimpse(selected_columns)
```

## Question 13: Rename `rad_ib` and `inc`.
```{r}
trees <- trees %>%
  rename(rad_ib_mm = rad_ib, inc_mm = inc)

glimpse(trees)
```

## Question 14: Compute DBH_cm, BA_m2, and find mean for `POTR` in 2007.
```{r}
BA_m2 <- trees %>%
  mutate( DBH_cm = (rad_ib_mm * 2) / 10,
    BA_m2 = 0.00007854 * DBH_cm^2) %>%
  filter(species == "POTR", year == 2007) %>%
  summarize(mean_BA = mean(BA_m2))

BA_m2
```

## Question 15: Add `established` column and count records.
```{r}
established_trees <- trees %>%
  mutate(established = if_else(age > 5, TRUE, FALSE)) %>%
  count(established)

established_trees
```

## Question 16: Classify DBH into categories.
```{r}
# First calculate DBH_cm
transformed <- trees %>%
    mutate(
      DBH_cm = (rad_ib_mm * 2) / 10,
      DBH_class = case_when(
        DBH_cm <= 2.5 ~ "seedling",
        DBH_cm <= 10 ~ "sapling",
        DBH_cm <= 30 ~ "pole",
        TRUE ~ "sawlog"
      )
    )

# Show sample of transformed data
head(transformed)

# Count trees in each class for 2007
classified_trees <- transformed %>%
  filter(year == 2007) %>%
  count(DBH_class)

classified_trees
```

## Question 17: Mean DBH and standard deviation for 2007 trees.
```{r}
dbh_stats <- trees %>%
  filter(year == 2007) %>%
  mutate(DBH_cm = (rad_ib_mm * 2) / 10) %>%
  summarize(mean_DBH_cm = mean(DBH_cm, na.rm = TRUE),
            sd_DBH_cm = sd(DBH_cm, na.rm = TRUE))

dbh_stats
```

## Question 18: Per-species mean tree age in 2003.
```{r}
species_age_2003 <- trees %>%
  filter(year == 2003) %>%
  group_by(species) %>%
  summarize(mean_age = mean(age, na.rm = TRUE)) %>%
  arrange(desc(mean_age)) %>%
  slice_head(n = 3)

species_age_2003
```

## Question 19: Unique years, first year, and last year.
```{r}
years_info <- trees %>%
  summarize(
    unique_years = n_distinct(year),
    first_year = min(year),
    last_year = max(year)
  )

years_info
```

## Question 20: Stands with the largest number of unique recorded years.
```{r}
stands_largest_years <- trees %>%
  group_by(stand) %>%
  summarize(unique_years = n_distinct(year)) %>%
  arrange(desc(unique_years)) %>%
  filter(unique_years == max(unique_years))

stands_largest_years
```

## Final Question: Fastest and slowest species growth rate.
```{r}
library(dplyr)

# Ensure column names are properly formatted
names(trees) <- trimws(names(trees))

# Step 1: Compute annual growth per tree
tree_growth <- trees %>%
  arrange(treeID, year) %>%
  group_by(treeID) %>%
  mutate(annual_growth = rad_ib_mm - lag(rad_ib_mm)) %>%
  filter(!is.na(annual_growth))  # Remove NA from first year

# Step 2: Filter trees with at least 10 years of growth records
tree_summary <- tree_growth %>%
  summarise(total_years = n(), avg_annual_growth = mean(annual_growth, na.rm = TRUE)) %>%
  filter(total_years >= 10)

# Step 3: Compute species-level statistics
species_growth <- tree_summary %>%
  left_join(trees %>% select(treeID, species), by = "treeID") %>%
  group_by(species) %>%
  summarise(
    avg_species_growth = mean(avg_annual_growth, na.rm = TRUE),
    sd_species_growth = sd(avg_annual_growth, na.rm = TRUE),
    .groups = 'drop'
  )

# Step 4: Identify the fastest and slowest growing species
fastest_species <- species_growth %>%
  arrange(desc(avg_species_growth)) %>%
  slice_head(n = 3)

slowest_species <- species_growth %>%
  arrange(avg_species_growth) %>%
  slice_head(n = 3)

# Display results
print("Fastest Growing Species:")
print(fastest_species)

print("Slowest Growing Species:")
print(slowest_species)

```
![Fastest Growing Species](images/Hybrid-Poplar.webp)
